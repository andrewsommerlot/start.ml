{
    "collab_server" : "",
    "contents" : "#' autotrain\n#'\n#' Autotrain implements H2O grid search to automatically build machine learning\n#' models\n#'\n#' @param train H2O frame object containing labeled data for model training.\n#' No Default.\n#' @param valid H2O frame object containing labeled data for model validation.\n#' No Default.\n#' @param y Character object of length 1 identifying the column name of the target variable. No Default.\n#' @param x Character object of length 1 or more identifying the column name(s) of the input variables. No Default.\n#' @param algorithms Character object of length 3, 2, or 1, specifying which alrogrithms to automatically train. The autotrain function will run a separate grid search for each algorimth type. Choices are: \"deeplearning\", \"randomForest\", and \"gbm\" following the naming convention in H2O version 3. Defaults to c(\"deeplearning\", \"randomForest\", \"gbm\").\n#' @param eval_metric Character object defining evaluation metric for training. Defualt is \"AUTO\" and uses built-in H2O automatic choice for target data type.\n#' @param validation_type Defines validation type for training models.  Defaults to \"shared_holdout\" indicating all model built with all algorithms share the same validation set. Currently, this is the only option in autotrain. Planned types include \"random_holdout\" where each model will get a unique randomized sample of labeled data for validation, and \"xval\" in which the cross validation functionality in H2O will be implemented in every model.\n#' @param runtime_secs Character Object which sets the length of time each grid search will run. Defaults to 20, thus the default runtime is 20 sec * (length of algorimths) = 1 minute.\n# @keywords gradient boosting, deep learning, random forest, gird serach optimization, automatic, training\n#' @param wd Character object defining file path where resulting modeling will be saved. Defualts to current working directory.\n#' @return List object containing H2O model objects\n#' @export\nautotrain <- function(train,\n                      valid,\n                      y,\n                      x,\n                      algorithms = c(\"deeplearning\", \"randomForest\", \"gbm\"),\n                      eval_metric = \"AUTO\",\n                      validation_type = \"SharedHoldout\", # add RandomHoldout and cv\n                      runtime_secs = 10,\n                      wd = getwd()) {\n\n  model_paths <- NULL\n\n  if(sum(as.numeric(algorithms %in% \"deeplearning\")) == 1) {\n    dl_autogrid(train = train,\n                 valid = valid,\n                 y = y,\n                 x = x,\n                 eval_metric = eval_metric,\n                 deeplearning_runtime_secs = runtime_secs)\n    model_paths <- c(model_paths, paste(wd, \"/dl_models\", sep = \"\"))\n  }\n  if(sum(as.numeric(algorithms %in% \"randomForest\")) == 1) {\n    rf_autogrid(train = train,\n                 valid = valid,\n                 y = y,\n                 x = x,\n                 eval_metric = eval_metric,\n                 rf_runtime_secs = runtime_secs)\n    model_paths <- c(model_paths, paste(wd, \"/rf_models\", sep = \"\"))\n  }\n  if(sum(as.numeric(algorithms %in% \"gbm\")) == 1) {\n    gbm_autogrid(train = train,\n                  valid = valid,\n                  y = y,\n                  x = x,\n                  eval_metric = eval_metric,\n                  gbm_runtime_secs = runtime_secs)\n    model_paths <- c(model_paths, paste(wd, \"/gbm_models\", sep = \"\"))\n  }\n  if(sum(as.numeric(algorithms %in% \"gbm\") + as.numeric(algorithms %in% \"randomForest\") +\n         as.numeric(algorithms %in% \"deeplearning\") == 0)) {\n    stop(\"Set algorithms to one or a combination of 'deeplearning', 'randomForest', 'gbm'\")\n  }\n\n  all_models <- load_models(model_paths)\n  all_models\n}\n",
    "created" : 1496000532147.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3785166776",
    "id" : "201230D9",
    "lastKnownWriteTime" : 1495997698,
    "last_content_update" : 1495997698,
    "path" : "C:/Users/Andy/Desktop/r-package/startml/R/autotrain.R",
    "project_path" : "R/autotrain.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}