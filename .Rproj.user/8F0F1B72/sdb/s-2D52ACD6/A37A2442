{
    "collab_server" : "",
    "contents" : "#' rf_autogrid\n#'\n#' rf_autogrid is a wrapper employing built-in settings to run grid search hyper parameter optimizations on the random forest algorithm.\n#'\n#' @param train H2O frame object containing labeled data for model training.\n#' No Default.\n#' @param valid H2O frame object containing labeled data for model validation.\n#' No Default.\n#' @param y Character object of length 1 identifying the column name of the target variable. No Default.\n#' @param x Character object of length 1 or more identifying the column name(s) of the input variables. No Default.\n#' @param folds Character object defining number of folds for xval. Default is NULL and currently is not implemented.\n#' @param rf_runtime_secs Numeric object defining total number of seconds the hyper parameter grid search will run.\n#' @param rf_stopping_rounds Numeric object defining maximum number of training rounds an individual deep learning model not improving will continue to run. Default is 10.\n#' @param rf_stopping_tolerance Numeric object which sets the mimmum loss funciton improvement for a training iteration to be considered an improvement. Defulat is 1E-5.\n#' @param rf_min_depth Numeric object which sets the minimum tree depth for all random forest models. Defaut is 1.\n#' @param rf_max_depth Numeric object which sets the maximum tree depth for all random forest models. Defaut is 7.\n#' @param grid_strategy Character object default and only current supported option is \"randomDiscrete\"\n#' @param eval_metric Character object defining evaluation metric for training. Defualt is \"AUTO\" and uses built-in H2O automatic choice for target data type.\n#' @param wd Character object defining file path where dl_models folder will be created and deep learning models saved. Defaults to current working directory.\n#' @return List object containing H2O model objects. Additionally saves h2o models as re-loadable text files in wd/rf_models folder.\n#' @export\nrf_autogrid <- function(train,\n                        valid,\n                        y,\n                        x,\n                        eval_metric = \"AUTO\",\n                        wd = getwd(),\n                        folds = NULL,\n                        rf_min_depth = 1,\n                        rf_max_depth = 7,\n                        rf_runtime_secs = 20,\n                        rf_stopping_rounds = 10,\n                        rf_stopping_tolerance = 1e-5,\n                        grid_strategy = \"RandomDiscrete\") {\n\n  cat(\"Training Random Forest Models\\n\")\n### here for grid\n  rf_parameter_search <- list(max_depth = seq(rf_min_depth, rf_max_depth, 1),\n                             sample_rate = c(0.2, 0.4, 0.5, 0.7, 0.9),\n                             col_sample_rate_per_tree = c(0.2, 0.4, 0.5, 0.9, 1),\n                             col_sample_rate_change_per_level = c(0.2, 0.4, 0.5, 0.9, 1),\n                             min_rows = 2^seq(0,log2(nrow(train))-1,1),\n                             nbins = 2^seq(4,10,1),\n                             nbins_cats = 2^seq(4,12,1),\n                             min_split_improvement = c(0,1e-8,1e-6,1e-4),\n                             histogram_type = c(\"UniformAdaptive\",\"QuantilesGlobal\",\"RoundRobin\"))\n\n  rf_search_criteria <- list(strategy = grid_strategy,\n                            max_runtime_secs = rf_runtime_secs,\n                            stopping_rounds = rf_stopping_rounds,\n                            stopping_tolerance = rf_stopping_tolerance,\n                            stopping_metric = eval_metric,\n                            seed = 1234)\n\n  # needs be removed first for iterating within same session\n  h2o.rm(\"rf\")\n  rf_random_grid <- h2o.grid(hyper_params = rf_parameter_search,\n                             search_criteria = rf_search_criteria,\n                             algorithm = \"randomForest\",\n                             grid_id = \"rf\",\n                             x = x,\n                             y = y,\n                             training_frame = train,\n                             validation_frame = valid,\n                             ntrees = 4000, # must be changable\n                             seed = 1234) # must change\n\n  #================================================\n  #rf_grid <- h2o.getGrid(\"rf\")\n\n  # write out the models to disk\n  rf_path <- paste(wd, \"/rf_models\", sep = \"\")\n  rf_model_files <- sapply(rf_random_grid@model_ids, function(m) h2o.saveModel(h2o.getModel(m), path = rf_path, force = TRUE))\n\n  # print out, needs work\n  cat(paste(\"Random Forest Models Saved To:\\n\", rf_path, \"\\n\\n\"))\n  rf_random_grid\n}\n",
    "created" : 1496010462465.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1117883088",
    "id" : "A37A2442",
    "lastKnownWriteTime" : 1496011085,
    "last_content_update" : 1496011085538,
    "path" : "C:/Users/Andy/Desktop/r-package/startml/R/rf-autogrid.R",
    "project_path" : "R/rf-autogrid.R",
    "properties" : {
    },
    "relative_order" : 18,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}