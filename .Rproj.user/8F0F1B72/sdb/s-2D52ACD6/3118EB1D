{
    "collab_server" : "",
    "contents" : "#' dl_autogrid\n#'\n#' dl_autogrid is a wrapper employing built-in settings to run grid search hyper parameter optimizations on deep learning (dl_ algorithms)\n#'\n#' @param train H2O frame object containing labeled data for model training.\n#' No Default.\n#' @param valid H2O frame object containing labeled data for model validation.\n#' No Default.\n#' @param y Character object of length 1 identifying the column name of the target variable. No Default.\n#' @param x Character object of length 1 or more identifying the column name(s) of the input variables. No Default.\n#' @param folds Character object defining number of folds for xval. Default is NULL and currently is not implemented.\n#' @param deeplearning_runtime_secs Numeric object defining total number of seconds the hyper parameter grid search will run.\n#' @param deeplearning_stopping_rounds Numeric object defining maximum number of training rounds an individual deep learning model not improving will continue to run. Default is 10.\n#' @param deeplearning_stopping_tolerance Numeric object which sets the mimmum loss funciton improvement for a training iteration to be considered an improvement. Defulat is 1E-5.\n#' @param deeplearning_adaptive_rate Boolean, if TRUE ADELTA is used to control learning rate if FALSE than normal rate controls can be used.\n#' @param grid_strategy Character object default and only current supported option is \"randomDiscrete\"\n#' @param eval_metric Character object defining evaluation metric for training. Defualt is \"AUTO\" and uses built-in H2O automatic choice for target data type.\n#' @param wd Character object defining file path where dl_models folder will be created and deep learning models saved. Defaults to current working directory.\n#' @return List object containing H2O model objects. Additionally saves h2o models as re-loadable text files in wd/dl_models folder.\n#' @export\ndl_autogrid <- function(train,\n                        valid,\n                        y,\n                        x,\n                        eval_metric = \"AUTO\",\n                        wd = getwd(),\n                        folds = NULL,\n                        deeplearning_runtime_secs = 10,\n                        deeplearning_stopping_rounds = 10,\n                        deeplearning_stopping_tolerance = 1e-5,\n                        deeplearning_adaptive_rate = TRUE,\n                        grid_strategy = \"RandomDiscrete\") {\n\n  cat(\"Training Deep Learning Models\\n\")\n  #==============================================\n  dl_parameter_search <- list(rate= c(1e-9, 1e-8, 1e-7, 1e-6),\n                              rate_annealing= c(1e-12, 1e-9, 1e-6),\n                              momentum_start= c(0.8, 0.9),\n                              momentum_stable= c(0.95, 0.99),\n                              momentum_ramp= 1/seq(1e-12, 1e-9, 1e-6),\n                              score_duty_cycle= c(0.02, 0.05, 0.1),\n                              activation = c(\"RectifierWithDropout\",\n                                             \"TanhWithDropout\",\n                                             \"MaxoutWithDropout\"),\n                              hidden = list(c(200,200,200),\n                                            c(512,512,512),\n                                            c(32,32,32),\n                                            c(64, 64, 64)),\n                              input_dropout_ratio = c(0, 0.05, 0.1),\n                              hidden_dropout_ratios = list(c(0, 0, 0),\n                                                           c(0.1, 0.1, 0.1),\n                                                           c(0.2, 0.2, 0.2),\n                                                           c(0.5, 0.5, 0.5)),\n                              l1= c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 0),\n                              l2= c(1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 0),\n                              max_w2= c(10, 20, 40),\n                              epsilon = c(1e-10, 1e-8, 1e-6, 1e-4),\n                              rho = c(0.97, 0.98, 0.98))\n\n  #========================================================\n  # set variable type for proper auto options\n  if(deeplearning_adaptive_rate == TRUE) {\n    hyper_params <- dl_parameter_search[seq(7,15)]\n  }\n  if(deeplearning_adaptive_rate == FALSE) {\n    hyper_params <- dl_parameter_search[seq(1:13)]\n  }\n\n  dl_search_criteria = list(strategy = grid_strategy,\n                            max_runtime_secs = deeplearning_runtime_secs,\n                            stopping_rounds = deeplearning_stopping_rounds,\n                            stopping_tolerance = deeplearning_stopping_tolerance,\n                            seed = 1234) # needs to be changable\n\n  # run the grid\n  # needs be removed first for iterating within same session\n  h2o.rm(\"dl\")\n  dl_random_grid <- h2o.grid(algorithm=\"deeplearning\",\n                             grid_id = \"dl\", # makes repeat run impossible\n                             training_frame=train,\n                             validation_frame = valid,\n                             x = x,\n                             y = y,\n                             standardize = TRUE,\n                             epochs=1000, #needs to change\n                             overwrite_with_best_model = TRUE,\n                             adaptive_rate = deeplearning_adaptive_rate,\n                             hyper_params = dl_parameter_search,\n                             search_criteria = dl_search_criteria,\n                             stopping_metric = eval_metric,\n                             seed = 1234) # needs to be changable\n  #====================================================\n  #dl_grid <- h2o.getGrid(\"dl\")\n\n  # write out the models to disk\n  dl_path <- paste(wd, \"/dl_models\", sep = \"\")\n  dl_model_files <- sapply(dl_random_grid@model_ids, function(m) h2o.saveModel(h2o.getModel(m), path = dl_path, force = TRUE))\n\n  # print out alert\n  cat(paste(\"Deep Learning Models Saved To:\\n\", dl_path, \"\\n\\n\"))\n  dl_random_grid\n}\n",
    "created" : 1495999358277.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "134855136",
    "id" : "3118EB1D",
    "lastKnownWriteTime" : 1496011093,
    "last_content_update" : 1496011093978,
    "path" : "C:/Users/Andy/Desktop/r-package/startml/R/dl-autogrid.R",
    "project_path" : "R/dl-autogrid.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}